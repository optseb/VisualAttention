<?xml version="1.0" encoding="UTF-8"?>
<LL:SpineML xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.shef.ac.uk/SpineMLNetworkLayer" xmlns:LL="http://www.shef.ac.uk/SpineMLLowLevelNetworkLayer" xsi:schemaLocation="http://www.shef.ac.uk/SpineMLLowLevelNetworkLayer SpineMLLowLevelNetworkLayer.xsd http://www.shef.ac.uk/SpineMLNetworkLayer SpineMLNetworkLayer.xsd" name="Ventral Stream">
    <LL:Population>
        <LL:Annotation>
            <SpineCreator>
                <xPos value="-0.780396"/>
                <yPos value="-1.51214"/>
                <animSpeed value="0.2"/>
                <aspectRatio value="1.66667"/>
                <colour red="85" green="170" blue="0"/>
                <size value="1"/>
                <tag value="1"/>
                <x3D value="0"/>
                <y3D value="0"/>
                <z3D value="0"/>
                <is_visualised value="0"/>
            </SpineCreator>
        </LL:Annotation>
        <LL:Neuron name="World" size="22500" url="WorldToBrain.xml">
            <Property name="y" dimension="?">
                <FixedValue value="0"/>
            </Property>
        </LL:Neuron>
        <Layout url="grid.xml" seed="123" minimum_distance="0">
            <Property name="numNeurons" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="rowlen" dimension="?">
                <FixedValue value="150"/>
            </Property>
            <Property name="x" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="y" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="z" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="t" dimension="?">
                <FixedValue value="0"/>
            </Property>
        </Layout>
        <LL:Projection dst_population="V1_p_edges">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="4" showlabel="0"/>
                    <start x="-0.899696" y="-1.01214"/>
                    <curves>
                        <curve>
                            <C1 xpos="-0.975796" ypos="1.00376"/>
                            <C2 xpos="-2.3237" ypos="-0.838643"/>
                            <end xpos="-2.38359" ypos="1.08044"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <ConnectionList>
                    <LL:Annotation>
                        <SpineCreator>
                            <Script text="#PARNAME=sigma_g  #LOC=1,1&#10;#PARNAME=gain_g   #LOC=1,2&#10;#PARNAME=lambda_s #LOC=2,1&#10;#PARNAME=gain_s   #LOC=2,2&#10;#PARNAME=dir_s    #LOC=3,1&#10;#PARNAME=wco      #LOC=3,2&#10;#PARNAME=roi      #LOC=4,1&#10;#HASWEIGHT&#10;&#10;# This implements a Gabor connection; a 2-D Gaussian multiplied by a 1-D sine. Arguments:&#10;# sigma_g - sigma of the gaussian&#10;# gain_g - a gain for the gaussian&#10;# lambda_s - wavelength of sine&#10;# gain_s - gain of sine&#10;# dir_s - direction of (1-D) sine in degrees&#10;def connectionFunc(srclocs,dstlocs,sigma_g,gain_g,lambda_s,gain_s,dir_s,wco,roi):&#10;&#10;    import math&#10;&#10;    twopi = 6.283185307;&#10;&#10;    i = 0 # i is 'src iterator'&#10;    j = 0 # j is 'dst iterator'&#10;    out = [] # To return result&#10;&#10;    for srcloc in srclocs:&#10;        j = 0&#10;        for dstloc in dstlocs:&#10;&#10;            # Avoid many tanh, sin, cos, pow and exp computations for well-separated neurons:&#10;            xdist = srcloc[0] - dstloc[0]&#10;            ydist = srcloc[1] - dstloc[1]&#10;            # Ignore zdist&#10;            if abs(xdist) &gt; roi or abs(ydist) &gt; roi:&#10;                j = j + 1&#10;                continue&#10;&#10;            zdist = srcloc[2] - dstloc[2]&#10;            dist = math.sqrt(math.pow(xdist,2) + math.pow(ydist,2) + math.pow(zdist,2))&#10;&#10;            # Direction from source to dest&#10;            ##print ('dstloc[1]: ', dstloc[1], ' srcloc[1]:', srcloc[1])&#10;            ##print ('dstloc[0]: ', dstloc[0], ' srcloc[0]:', srcloc[0])&#10;            top = dstloc[1]-srcloc[1]&#10;            bot = dstloc[0]-srcloc[0]&#10;            ##print ('top:',top,'bot:',bot)&#10;            dir_d = math.atan2(top, bot);&#10;            ##print ('dir_d: ', dir_d, 'dir_s:', dir_s)&#10;&#10;            # Find the projection of the source-&gt;dest direction onto the sine wave direction. Call this distance dprime.&#10;            dprime = dist*math.cos(dir_d + twopi - ((dir_s*twopi)/360));&#10;            ##print ('dprime: ', dprime, ' dist: ', dist)&#10;&#10;            # Use dprime to figure out what the sine weight is.&#10;            sine_weight = gain_s*math.sin(dprime*twopi/lambda_s);&#10;            ##print ('sine_weight:', sine_weight)&#10;&#10;            gauss_weight = gain_g*math.exp(-0.5*math.pow(dist/sigma_g,2))&#10;            ##print ('gauss_weight:', gauss_weight)&#10;&#10;            combined_weight = sine_weight * gauss_weight;&#10;            ##print ('combined_weight:', combined_weight)&#10;&#10;            if abs(combined_weight) &gt; wco:&#10;                #sys.stdout.write('gauss&gt;0.0001: i={0} gauss={1}'.format( i, gauss))&#10;                conn = (i,j,0,combined_weight)&#10;                out.append(conn)&#10;&#10;            j = j + 1&#10;        i = i + 1&#10;    #sys.stdout.write('out length: %d' % len(out))&#10;    return out&#10;" name="Gabor" sigma_g="1" gain_g="1" lambda_s="8" gain_s="1" dir_s="0" wco="0.001" roi="8"/>
                            <Config weightProperty="w"/>
                        </SpineCreator>
                    </LL:Annotation>
                    <BinaryFile file_name="conn_World_to_V1_p_edges_syn0.bin" num_connections="835308" explicit_delay_flag="0" packed_data="true"/>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </ConnectionList>
                <LL:WeightUpdate name="World to V1_p_edges Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <ValueList>
                            <BinaryFile file_name="explicitDataBinaryFile0.bin" num_elements="835308"/>
                        </ValueList>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="World to V1_p_edges Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V1_r_edges">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="4" showlabel="0"/>
                    <start x="-0.578796" y="-1.01214"/>
                    <curves>
                        <curve>
                            <C1 xpos="-0.573696" ypos="0.957067"/>
                            <C2 xpos="1.0793" ypos="-0.577014"/>
                            <end xpos="0.983103" ypos="1.06237"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <ConnectionList>
                    <LL:Annotation>
                        <SpineCreator>
                            <Script text="#PARNAME=sigma_g  #LOC=1,1&#10;#PARNAME=gain_g   #LOC=1,2&#10;#PARNAME=lambda_s #LOC=2,1&#10;#PARNAME=gain_s   #LOC=2,2&#10;#PARNAME=dir_s    #LOC=3,1&#10;#PARNAME=wco      #LOC=3,2&#10;#PARNAME=roi      #LOC=4,1&#10;#HASWEIGHT&#10;&#10;# This implements a Gabor connection; a 2-D Gaussian multiplied by a 1-D sine. Arguments:&#10;# sigma_g - sigma of the gaussian&#10;# gain_g - a gain for the gaussian&#10;# lambda_s - wavelength of sine&#10;# gain_s - gain of sine&#10;# dir_s - direction of (1-D) sine in degrees&#10;def connectionFunc(srclocs,dstlocs,sigma_g,gain_g,lambda_s,gain_s,dir_s,wco,roi):&#10;&#10;    import math&#10;&#10;    twopi = 6.283185307;&#10;&#10;    i = 0 # i is 'src iterator'&#10;    j = 0 # j is 'dst iterator'&#10;    out = [] # To return result&#10;&#10;    for srcloc in srclocs:&#10;        j = 0&#10;        for dstloc in dstlocs:&#10;&#10;            # Avoid many tanh, sin, cos, pow and exp computations for well-separated neurons:&#10;            xdist = srcloc[0] - dstloc[0]&#10;            ydist = srcloc[1] - dstloc[1]&#10;            # Ignore zdist&#10;            if abs(xdist) &gt; roi or abs(ydist) &gt; roi:&#10;                j = j + 1&#10;                continue&#10;&#10;            zdist = srcloc[2] - dstloc[2]&#10;            dist = math.sqrt(math.pow(xdist,2) + math.pow(ydist,2) + math.pow(zdist,2))&#10;&#10;            # Direction from source to dest&#10;            ##print ('dstloc[1]: ', dstloc[1], ' srcloc[1]:', srcloc[1])&#10;            ##print ('dstloc[0]: ', dstloc[0], ' srcloc[0]:', srcloc[0])&#10;            top = dstloc[1]-srcloc[1]&#10;            bot = dstloc[0]-srcloc[0]&#10;            ##print ('top:',top,'bot:',bot)&#10;            dir_d = math.atan2(top, bot);&#10;            ##print ('dir_d: ', dir_d, 'dir_s:', dir_s)&#10;&#10;            # Find the projection of the source-&gt;dest direction onto the sine wave direction. Call this distance dprime.&#10;            dprime = dist*math.cos(dir_d + twopi - ((dir_s*twopi)/360));&#10;            ##print ('dprime: ', dprime, ' dist: ', dist)&#10;&#10;            # Use dprime to figure out what the sine weight is.&#10;            sine_weight = gain_s*math.sin(dprime*twopi/lambda_s);&#10;            ##print ('sine_weight:', sine_weight)&#10;&#10;            gauss_weight = gain_g*math.exp(-0.5*math.pow(dist/sigma_g,2))&#10;            ##print ('gauss_weight:', gauss_weight)&#10;&#10;            combined_weight = sine_weight * gauss_weight;&#10;            ##print ('combined_weight:', combined_weight)&#10;&#10;            if abs(combined_weight) &gt; wco:&#10;                #sys.stdout.write('gauss&gt;0.0001: i={0} gauss={1}'.format( i, gauss))&#10;                conn = (i,j,0,combined_weight)&#10;                out.append(conn)&#10;&#10;            j = j + 1&#10;        i = i + 1&#10;    #sys.stdout.write('out length: %d' % len(out))&#10;    return out&#10;" name="Gabor" sigma_g="1" gain_g="1" lambda_s="8" gain_s="1" dir_s="90" wco="0.001" roi="8"/>
                            <Config weightProperty="w"/>
                        </SpineCreator>
                    </LL:Annotation>
                    <BinaryFile file_name="conn_World_to_V1_r_edges_syn0.bin" num_connections="835308" explicit_delay_flag="0" packed_data="true"/>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </ConnectionList>
                <LL:WeightUpdate name="World to V1_r_edges Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <ValueList>
                            <BinaryFile file_name="explicitDataBinaryFile3.bin" num_elements="835308"/>
                        </ValueList>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="World to V1_r_edges Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
    </LL:Population>
    <LL:Population>
        <LL:Annotation>
            <SpineCreator>
                <xPos value="-2.3599"/>
                <yPos value="1.58044"/>
                <animSpeed value="0.2"/>
                <aspectRatio value="1.66667"/>
                <colour red="255" green="0" blue="0"/>
                <size value="1"/>
                <tag value="2"/>
                <x3D value="0"/>
                <y3D value="0"/>
                <z3D value="11"/>
                <is_visualised value="0"/>
            </SpineCreator>
        </LL:Annotation>
        <LL:Neuron name="V1_p_edges" size="22500" url="LINtanh.xml">
            <Property name="tau" dimension="?">
                <FixedValue value="10"/>
            </Property>
            <Property name="noise" dimension="?">
                <FixedValue value="0.01"/>
            </Property>
            <Property name="a" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="y" dimension="?">
                <FixedValue value="0"/>
            </Property>
        </LL:Neuron>
        <Layout url="grid.xml" seed="123" minimum_distance="0">
            <Property name="numNeurons" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="rowlen" dimension="?">
                <FixedValue value="150"/>
            </Property>
            <Property name="x" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="y" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="z" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="t" dimension="?">
                <FixedValue value="0"/>
            </Property>
        </Layout>
        <LL:Projection dst_population="V2_p_lines">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="4" showlabel="0"/>
                    <start x="-2.60073" y="2.08044"/>
                    <curves>
                        <curve>
                            <C1 xpos="-2.58567" ypos="4.21171"/>
                            <C2 xpos="-5.82938" ypos="3.82888"/>
                            <end xpos="-5.81622" ypos="6.12779"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <ConnectionList>
                    <LL:Annotation>
                        <SpineCreator>
                            <Script text="#PARNAME=sigma_m        #LOC=1,1&#10;#PARNAME=E2             #LOC=1,2&#10;#PARNAME=sigma_0        #LOC=2,1&#10;#PARNAME=fovshift       #LOC=2,2&#10;#PARNAME=nfs            #LOC=3,1&#10;#PARNAME=W_cut          #LOC=3,2&#10;#PARNAME=offsetd0p      #LOC=4,1&#10;#PARNAME=offsetd1r      #LOC=4,2&#10;#HASWEIGHT&#10;&#10;# Compute a widening Gaussian connection function for a retinotopic&#10;# space, to maintain a constant Gaussian width in Cartesian&#10;# space. This is much like the WideningGaussian connection function,&#10;# but with a configurable neural field size width (W_nfs).&#10;#&#10;# This version incorporates an offset for dstloc[0] and dstloc[1] to&#10;# shift the Gaussian projection by a desired amount AND it does so to dual Gaussians, offset by +/=offsetd0p and +/-offsetd1r&#10;#&#10;# offsetd0p is the +/- phi direction&#10;# offsetd1r is in the +/- r direction&#10;&#10;def connectionFunc(srclocs,dstlocs,sigma_m,E2,sigma_0,fovshift,nfs,W_cut,offsetd0p,offsetd1r):&#10;&#10;  import math&#10;&#10;  M_f_start=nfs/(E2*math.log((fovshift/(2*E2))+1))&#10;&#10;  i_src = 0&#10;  out = []&#10;  for srcloc in srclocs:&#10;    i_dst = 0&#10;    # Compute the location of srcloc, this defines what sigma will be. As r (as opp. to phi) increases, the sigma should increase.&#10;    M_f =  nfs/(E2*math.log(((1+srcloc[1])/(2*E2))+1))&#10;&#10;    # Set some of M_f to 1 to ensure the fan-out starts at around the edge of the foveal region.&#10;    if (1+srcloc[1]) &lt; fovshift:&#10;      M_f = M_f_start&#10;&#10;    _sigma = (sigma_m/M_f) - (sigma_m/M_f_start) + sigma_0 # as function of r, aka srcloc[1]. M_f is the function of r.&#10;&#10;    for dstloc in dstlocs:&#10;&#10;      # in-xy-plane distance (ignore srcloc[2]/dstdoc[2])&#10;      dist1 = math.sqrt(math.pow((srcloc[0] - dstloc[0] + offsetd0p),2) + math.pow((srcloc[1] - dstloc[1] + offsetd1r),2))&#10;      dist2 = math.sqrt(math.pow((srcloc[0] - dstloc[0] - offsetd0p),2) + math.pow((srcloc[1] - dstloc[1] - offsetd1r),2))&#10;&#10;      gauss1 = math.exp(-0.5*math.pow(dist1/_sigma,2))&#10;      gauss2 = math.exp(-0.5*math.pow(dist2/_sigma,2))&#10;&#10;      if gauss1 &gt; W_cut:&#10;        conn = (i_src,i_dst,0,gauss1)&#10;        out.append(conn)&#10;      elif gauss2 &gt; W_cut:&#10;        conn = (i_src,i_dst,0,gauss2)&#10;        out.append(conn)&#10;&#10;      i_dst = i_dst + 1&#10;    i_src = i_src + 1&#10;  return out&#10;" name="OffsetDualRetGauss" sigma_m="30" E2="2.5" sigma_0="0.3" fovshift="1" nfs="150" W_cut="0.001" offsetd0p="4" offsetd1r="0"/>
                            <Config weightProperty="w"/>
                        </SpineCreator>
                    </LL:Annotation>
                    <BinaryFile file_name="conn_V1_p_edges_to_V2_p_lines_syn0.bin" num_connections="3878176" explicit_delay_flag="0" packed_data="true"/>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </ConnectionList>
                <LL:WeightUpdate name="V1_p_edges to V2_p_lines Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <ValueList>
                            <BinaryFile file_name="explicitDataBinaryFile2.bin" num_elements="3878176"/>
                        </ValueList>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V1_p_edges to V2_p_lines Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pPp_rPr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="4" showlabel="0"/>
                    <start x="-2.1018" y="2.08044"/>
                    <curves>
                        <curve>
                            <C1 xpos="-1.48893" ypos="4.31083"/>
                            <C2 xpos="-2.51705" ypos="3.06797"/>
                            <end xpos="-2.51417" ypos="5.14418"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <ConnectionList>
                    <LL:Annotation>
                        <SpineCreator>
                            <Script text="#PARNAME=sigma_m        #LOC=1,1&#10;#PARNAME=E2             #LOC=1,2&#10;#PARNAME=sigma_0        #LOC=2,1&#10;#PARNAME=fovshift       #LOC=2,2&#10;#PARNAME=nfs            #LOC=3,1&#10;#PARNAME=W_cut          #LOC=3,2&#10;#PARNAME=offsetd0p      #LOC=4,1&#10;#PARNAME=offsetd1r      #LOC=4,2&#10;#HASWEIGHT&#10;&#10;# Compute a widening Gaussian connection function for a retinotopic&#10;# space, to maintain a constant Gaussian width in Cartesian&#10;# space. This is much like the WideningGaussian connection function,&#10;# but with a configurable neural field size width (W_nfs).&#10;#&#10;# This version incorporates an offset for dstloc[0] and dstloc[1] to&#10;# shift the Gaussian projection by a desired amount.&#10;#&#10;# Considering the r direction, r_d^max, the destination r value for&#10;# max connection strength for a given r_s is given by&#10;#&#10;# r_d^max = r_s + offsetd1r&#10;#&#10;# Thus for positive offsetd1r, &quot;connections are stronger in the&#10;# positive r direction away from the source&quot;.&#10;#&#10;# For positive offsetd0p, &quot;connections are stronger in the&#10;# positive p direction away from the source&quot;.&#10;&#10;def connectionFunc(srclocs,dstlocs,sigma_m,E2,sigma_0,fovshift,nfs,W_cut,offsetd0p,offsetd1r):&#10;&#10;  import math&#10;&#10;  M_f_start=nfs/(E2*math.log((fovshift/(2*E2))+1))&#10;&#10;  i_src = 0&#10;  out = []&#10;  for srcloc in srclocs:&#10;    i_dst = 0&#10;    # Compute the location of srcloc, this defines what sigma will be. As r (as opp. to phi) increases, the sigma should increase.&#10;    M_f =  nfs/(E2*math.log(((1+srcloc[1])/(2*E2))+1))&#10;&#10;    # Set some of M_f to 1 to ensure the fan-out starts at around the edge of the foveal region.&#10;    if (1+srcloc[1]) &lt; fovshift:&#10;      M_f = M_f_start&#10;&#10;    _sigma = (sigma_m/M_f) - (sigma_m/M_f_start) + sigma_0 # as function of r, aka srcloc[1]. M_f is the function of r.&#10;    three_sigma = 3 * _sigma&#10;&#10;    for dstloc in dstlocs:&#10;&#10;      # in-xy-plane distance (ignore srcloc[2]/dstdoc[2])&#10;      xd = (srcloc[0] - dstloc[0] + offsetd0p)&#10;      yd = (srcloc[1] - dstloc[1] + offsetd1r)&#10;      if abs(xd) &lt; three_sigma and abs(yd) &lt; three_sigma:&#10;        dist = math.sqrt(math.pow(xd,2) + math.pow(yd,2))&#10;&#10;        gauss = math.exp(-0.5*math.pow(dist/_sigma,2))&#10;&#10;        if gauss &gt; W_cut:&#10;          conn = (i_src,i_dst,0,gauss)&#10;          out.append(conn)&#10;&#10;      i_dst = i_dst + 1&#10;    i_src = i_src + 1&#10;  return out&#10;" name="OffsetRetGauss" sigma_m="15" E2="2.5" sigma_0="0.3" fovshift="1" nfs="150" W_cut="0.001" offsetd0p="4" offsetd1r="0"/>
                            <Config weightProperty="w"/>
                        </SpineCreator>
                    </LL:Annotation>
                    <BinaryFile file_name="conn_V1_p_edges_to_V2_p_p_r_r_syn0.bin" num_connections="650868" explicit_delay_flag="0" packed_data="true"/>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </ConnectionList>
                <LL:WeightUpdate name="V1_p_edges to V2_pPp_rPr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <ValueList>
                            <BinaryFile file_name="explicitDataBinaryFile5.bin" num_elements="650868"/>
                        </ValueList>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V1_p_edges to V2_pPp_rPr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V1_r_edges">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="-1.52656" y="1.85941"/>
                    <curves>
                        <curve>
                            <C1 xpos="-0.620933" ypos="2.16257"/>
                            <C2 xpos="-0.469916" ypos="1.97673"/>
                            <end xpos="0.100069" ypos="1.80843"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V1_p_edges to V1_r_edges Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V1_p_edges to V1_r_edges Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pPp_rMr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="4" showlabel="0"/>
                    <start x="-2.08315" y="2.08044"/>
                    <curves>
                        <curve>
                            <C1 xpos="0.0337563" ypos="7.89597"/>
                            <C2 xpos="-2.22832" ypos="5.60847"/>
                            <end xpos="-2.27773" ypos="7.25032"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <ConnectionList>
                    <LL:Annotation>
                        <SpineCreator>
                            <Script text="#PARNAME=sigma_m        #LOC=1,1&#10;#PARNAME=E2             #LOC=1,2&#10;#PARNAME=sigma_0        #LOC=2,1&#10;#PARNAME=fovshift       #LOC=2,2&#10;#PARNAME=nfs            #LOC=3,1&#10;#PARNAME=W_cut          #LOC=3,2&#10;#PARNAME=offsetd0p      #LOC=4,1&#10;#PARNAME=offsetd1r      #LOC=4,2&#10;#HASWEIGHT&#10;&#10;# Compute a widening Gaussian connection function for a retinotopic&#10;# space, to maintain a constant Gaussian width in Cartesian&#10;# space. This is much like the WideningGaussian connection function,&#10;# but with a configurable neural field size width (W_nfs).&#10;#&#10;# This version incorporates an offset for dstloc[0] and dstloc[1] to&#10;# shift the Gaussian projection by a desired amount.&#10;#&#10;# Considering the r direction, r_d^max, the destination r value for&#10;# max connection strength for a given r_s is given by&#10;#&#10;# r_d^max = r_s + offsetd1r&#10;#&#10;# Thus for positive offsetd1r, &quot;connections are stronger in the&#10;# positive r direction away from the source&quot;.&#10;#&#10;# For positive offsetd0p, &quot;connections are stronger in the&#10;# positive p direction away from the source&quot;.&#10;&#10;def connectionFunc(srclocs,dstlocs,sigma_m,E2,sigma_0,fovshift,nfs,W_cut,offsetd0p,offsetd1r):&#10;&#10;  import math&#10;&#10;  M_f_start=nfs/(E2*math.log((fovshift/(2*E2))+1))&#10;&#10;  i_src = 0&#10;  out = []&#10;  for srcloc in srclocs:&#10;    i_dst = 0&#10;    # Compute the location of srcloc, this defines what sigma will be. As r (as opp. to phi) increases, the sigma should increase.&#10;    M_f =  nfs/(E2*math.log(((1+srcloc[1])/(2*E2))+1))&#10;&#10;    # Set some of M_f to 1 to ensure the fan-out starts at around the edge of the foveal region.&#10;    if (1+srcloc[1]) &lt; fovshift:&#10;      M_f = M_f_start&#10;&#10;    _sigma = (sigma_m/M_f) - (sigma_m/M_f_start) + sigma_0 # as function of r, aka srcloc[1]. M_f is the function of r.&#10;    three_sigma = 3 * _sigma&#10;&#10;    for dstloc in dstlocs:&#10;&#10;      # in-xy-plane distance (ignore srcloc[2]/dstdoc[2])&#10;      xd = (srcloc[0] - dstloc[0] + offsetd0p)&#10;      yd = (srcloc[1] - dstloc[1] + offsetd1r)&#10;      if abs(xd) &lt; three_sigma and abs(yd) &lt; three_sigma:&#10;        dist = math.sqrt(math.pow(xd,2) + math.pow(yd,2))&#10;&#10;        gauss = math.exp(-0.5*math.pow(dist/_sigma,2))&#10;&#10;        if gauss &gt; W_cut:&#10;          conn = (i_src,i_dst,0,gauss)&#10;          out.append(conn)&#10;&#10;      i_dst = i_dst + 1&#10;    i_src = i_src + 1&#10;  return out&#10;" name="OffsetRetGauss" sigma_m="15" E2="2.5" sigma_0="0.3" fovshift="1" nfs="150" W_cut="0.001" offsetd0p="4" offsetd1r="0"/>
                            <Config weightProperty="w"/>
                        </SpineCreator>
                    </LL:Annotation>
                    <BinaryFile file_name="conn_V1_p_edges_to_V2_p_p_r_r_syn0.bin" num_connections="26964" explicit_delay_flag="0" packed_data="true"/>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </ConnectionList>
                <LL:WeightUpdate name="V1_p_edges to V2_pPp_rMr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <ValueList>
                            <BinaryFile file_name="explicitDataBinaryFile1.bin" num_elements="26964"/>
                        </ValueList>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V1_p_edges to V2_pPp_rMr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pMp_rMr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="4" showlabel="0"/>
                    <start x="-2.075" y="2.08044"/>
                    <curves>
                        <curve>
                            <C1 xpos="-0.828692" ypos="4.71431"/>
                            <C2 xpos="0.357621" ypos="5.45928"/>
                            <end xpos="1.51314" ypos="7.14492"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <ConnectionList>
                    <LL:Annotation>
                        <SpineCreator>
                            <Script text="#PARNAME=sigma_m        #LOC=1,1&#10;#PARNAME=E2             #LOC=1,2&#10;#PARNAME=sigma_0        #LOC=2,1&#10;#PARNAME=fovshift       #LOC=2,2&#10;#PARNAME=nfs            #LOC=3,1&#10;#PARNAME=W_cut          #LOC=3,2&#10;#PARNAME=offsetd0p      #LOC=4,1&#10;#PARNAME=offsetd1r      #LOC=4,2&#10;#HASWEIGHT&#10;&#10;# Compute a widening Gaussian connection function for a retinotopic&#10;# space, to maintain a constant Gaussian width in Cartesian&#10;# space. This is much like the WideningGaussian connection function,&#10;# but with a configurable neural field size width (W_nfs).&#10;#&#10;# This version incorporates an offset for dstloc[0] and dstloc[1] to&#10;# shift the Gaussian projection by a desired amount.&#10;#&#10;# Considering the r direction, r_d^max, the destination r value for&#10;# max connection strength for a given r_s is given by&#10;#&#10;# r_d^max = r_s + offsetd1r&#10;#&#10;# Thus for positive offsetd1r, &quot;connections are stronger in the&#10;# positive r direction away from the source&quot;.&#10;#&#10;# For positive offsetd0p, &quot;connections are stronger in the&#10;# positive p direction away from the source&quot;.&#10;&#10;def connectionFunc(srclocs,dstlocs,sigma_m,E2,sigma_0,fovshift,nfs,W_cut,offsetd0p,offsetd1r):&#10;&#10;  import math&#10;&#10;  M_f_start=nfs/(E2*math.log((fovshift/(2*E2))+1))&#10;&#10;  i_src = 0&#10;  out = []&#10;  for srcloc in srclocs:&#10;    i_dst = 0&#10;    # Compute the location of srcloc, this defines what sigma will be. As r (as opp. to phi) increases, the sigma should increase.&#10;    M_f =  nfs/(E2*math.log(((1+srcloc[1])/(2*E2))+1))&#10;&#10;    # Set some of M_f to 1 to ensure the fan-out starts at around the edge of the foveal region.&#10;    if (1+srcloc[1]) &lt; fovshift:&#10;      M_f = M_f_start&#10;&#10;    _sigma = (sigma_m/M_f) - (sigma_m/M_f_start) + sigma_0 # as function of r, aka srcloc[1]. M_f is the function of r.&#10;    three_sigma = 3 * _sigma&#10;&#10;    for dstloc in dstlocs:&#10;&#10;      # in-xy-plane distance (ignore srcloc[2]/dstdoc[2])&#10;      xd = (srcloc[0] - dstloc[0] + offsetd0p)&#10;      yd = (srcloc[1] - dstloc[1] + offsetd1r)&#10;      if abs(xd) &lt; three_sigma and abs(yd) &lt; three_sigma:&#10;        dist = math.sqrt(math.pow(xd,2) + math.pow(yd,2))&#10;&#10;        gauss = math.exp(-0.5*math.pow(dist/_sigma,2))&#10;&#10;        if gauss &gt; W_cut:&#10;          conn = (i_src,i_dst,0,gauss)&#10;          out.append(conn)&#10;&#10;      i_dst = i_dst + 1&#10;    i_src = i_src + 1&#10;  return out&#10;" name="OffsetRetGauss" sigma_m="15" E2="2.5" sigma_0="0.3" fovshift="1" nfs="150" W_cut="0.001" offsetd0p="-4" offsetd1r="0"/>
                            <Config weightProperty="w"/>
                        </SpineCreator>
                    </LL:Annotation>
                    <BinaryFile file_name="conn__to__syn0.bin" num_connections="44940" explicit_delay_flag="0" packed_data="true"/>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </ConnectionList>
                <LL:WeightUpdate name="V1_p_edges to V2_pMp_rMr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <ValueList>
                            <BinaryFile file_name="explicitDataBinaryFile7.bin" num_elements="44940"/>
                        </ValueList>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V1_p_edges to V2_pMp_rMr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pMp_rPr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="4" showlabel="0"/>
                    <start x="-2.07943" y="2.08044"/>
                    <curves>
                        <curve>
                            <C1 xpos="-1.0834" ypos="4.04935"/>
                            <C2 xpos="1.29501" ypos="3.33582"/>
                            <end xpos="1.36211" ypos="5.05419"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <ConnectionList>
                    <LL:Annotation>
                        <SpineCreator>
                            <Script text="#PARNAME=sigma_m        #LOC=1,1&#10;#PARNAME=E2             #LOC=1,2&#10;#PARNAME=sigma_0        #LOC=2,1&#10;#PARNAME=fovshift       #LOC=2,2&#10;#PARNAME=nfs            #LOC=3,1&#10;#PARNAME=W_cut          #LOC=3,2&#10;#PARNAME=offsetd0p      #LOC=4,1&#10;#PARNAME=offsetd1r      #LOC=4,2&#10;#HASWEIGHT&#10;&#10;# Compute a widening Gaussian connection function for a retinotopic&#10;# space, to maintain a constant Gaussian width in Cartesian&#10;# space. This is much like the WideningGaussian connection function,&#10;# but with a configurable neural field size width (W_nfs).&#10;#&#10;# This version incorporates an offset for dstloc[0] and dstloc[1] to&#10;# shift the Gaussian projection by a desired amount.&#10;#&#10;# Considering the r direction, r_d^max, the destination r value for&#10;# max connection strength for a given r_s is given by&#10;#&#10;# r_d^max = r_s + offsetd1r&#10;#&#10;# Thus for positive offsetd1r, &quot;connections are stronger in the&#10;# positive r direction away from the source&quot;.&#10;#&#10;# For positive offsetd0p, &quot;connections are stronger in the&#10;# positive p direction away from the source&quot;.&#10;&#10;def connectionFunc(srclocs,dstlocs,sigma_m,E2,sigma_0,fovshift,nfs,W_cut,offsetd0p,offsetd1r):&#10;&#10;  import math&#10;&#10;  M_f_start=nfs/(E2*math.log((fovshift/(2*E2))+1))&#10;&#10;  i_src = 0&#10;  out = []&#10;  for srcloc in srclocs:&#10;    i_dst = 0&#10;    # Compute the location of srcloc, this defines what sigma will be. As r (as opp. to phi) increases, the sigma should increase.&#10;    M_f =  nfs/(E2*math.log(((1+srcloc[1])/(2*E2))+1))&#10;&#10;    # Set some of M_f to 1 to ensure the fan-out starts at around the edge of the foveal region.&#10;    if (1+srcloc[1]) &lt; fovshift:&#10;      M_f = M_f_start&#10;&#10;    _sigma = (sigma_m/M_f) - (sigma_m/M_f_start) + sigma_0 # as function of r, aka srcloc[1]. M_f is the function of r.&#10;    three_sigma = 3 * _sigma&#10;&#10;    for dstloc in dstlocs:&#10;&#10;      # in-xy-plane distance (ignore srcloc[2]/dstdoc[2])&#10;      xd = (srcloc[0] - dstloc[0] + offsetd0p)&#10;      yd = (srcloc[1] - dstloc[1] + offsetd1r)&#10;      if abs(xd) &lt; three_sigma and abs(yd) &lt; three_sigma:&#10;        dist = math.sqrt(math.pow(xd,2) + math.pow(yd,2))&#10;&#10;        gauss = math.exp(-0.5*math.pow(dist/_sigma,2))&#10;&#10;        if gauss &gt; W_cut:&#10;          conn = (i_src,i_dst,0,gauss)&#10;          out.append(conn)&#10;&#10;      i_dst = i_dst + 1&#10;    i_src = i_src + 1&#10;  return out&#10;" name="OffsetRetGauss" sigma_m="15" E2="2.5" sigma_0="0.3" fovshift="1" nfs="150" W_cut="0.001" offsetd0p="-4" offsetd1r="0"/>
                            <Config weightProperty="w"/>
                        </SpineCreator>
                    </LL:Annotation>
                    <BinaryFile file_name="conn_V1_p_edges_to_V2_pMp_rPr_syn0.bin" num_connections="44940" explicit_delay_flag="0" packed_data="true"/>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </ConnectionList>
                <LL:WeightUpdate name="V1_p_edges to V2_pMp_rPr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <ValueList>
                            <BinaryFile file_name="explicitDataBinaryFile10.bin" num_elements="44940"/>
                        </ValueList>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V1_p_edges to V2_pMp_rPr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
    </LL:Population>
    <LL:Population>
        <LL:Annotation>
            <SpineCreator>
                <xPos value="0.933404"/>
                <yPos value="1.56237"/>
                <animSpeed value="0.2"/>
                <aspectRatio value="1.66667"/>
                <colour red="255" green="0" blue="0"/>
                <size value="1"/>
                <tag value="2"/>
                <x3D value="0"/>
                <y3D value="0"/>
                <z3D value="0"/>
                <is_visualised value="1"/>
            </SpineCreator>
        </LL:Annotation>
        <LL:Neuron name="V1_r_edges" size="22500" url="LINtanh.xml">
            <Property name="tau" dimension="?">
                <FixedValue value="10"/>
            </Property>
            <Property name="noise" dimension="?">
                <FixedValue value="0.01"/>
            </Property>
            <Property name="a" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="y" dimension="?">
                <FixedValue value="0"/>
            </Property>
        </LL:Neuron>
        <Layout url="grid.xml" seed="123" minimum_distance="0">
            <Property name="numNeurons" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="rowlen" dimension="?">
                <FixedValue value="150"/>
            </Property>
            <Property name="x" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="y" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="z" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="t" dimension="?">
                <FixedValue value="0"/>
            </Property>
        </Layout>
        <LL:Projection dst_population="V2_r_lines">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="4" showlabel="0"/>
                    <start x="1.151" y="2.06237"/>
                    <curves>
                        <curve>
                            <C1 xpos="1.151" ypos="3.93652"/>
                            <C2 xpos="5.27956" ypos="3.97235"/>
                            <end xpos="5.26816" ypos="6.18373"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <ConnectionList>
                    <LL:Annotation>
                        <SpineCreator>
                            <Script text="#PARNAME=sigma_m        #LOC=1,1&#10;#PARNAME=E2             #LOC=1,2&#10;#PARNAME=sigma_0        #LOC=2,1&#10;#PARNAME=fovshift       #LOC=2,2&#10;#PARNAME=nfs            #LOC=3,1&#10;#PARNAME=W_cut          #LOC=3,2&#10;#PARNAME=offsetd0p      #LOC=4,1&#10;#PARNAME=offsetd1r      #LOC=4,2&#10;#HASWEIGHT&#10;&#10;# Compute a widening Gaussian connection function for a retinotopic&#10;# space, to maintain a constant Gaussian width in Cartesian&#10;# space. This is much like the WideningGaussian connection function,&#10;# but with a configurable neural field size width (W_nfs).&#10;#&#10;# This version incorporates an offset for dstloc[0] and dstloc[1] to&#10;# shift the Gaussian projection by a desired amount AND it does so to dual Gaussians, offset by +/=offsetd0p and +/-offsetd1r&#10;#&#10;# offsetd0p is the +/- phi direction&#10;# offsetd1r is in the +/- r direction&#10;&#10;def connectionFunc(srclocs,dstlocs,sigma_m,E2,sigma_0,fovshift,nfs,W_cut,offsetd0p,offsetd1r):&#10;&#10;  import math&#10;&#10;  M_f_start=nfs/(E2*math.log((fovshift/(2*E2))+1))&#10;&#10;  i_src = 0&#10;  out = []&#10;  for srcloc in srclocs:&#10;    i_dst = 0&#10;    # Compute the location of srcloc, this defines what sigma will be. As r (as opp. to phi) increases, the sigma should increase.&#10;    M_f =  nfs/(E2*math.log(((1+srcloc[1])/(2*E2))+1))&#10;&#10;    # Set some of M_f to 1 to ensure the fan-out starts at around the edge of the foveal region.&#10;    if (1+srcloc[1]) &lt; fovshift:&#10;      M_f = M_f_start&#10;&#10;    _sigma = (sigma_m/M_f) - (sigma_m/M_f_start) + sigma_0 # as function of r, aka srcloc[1]. M_f is the function of r.&#10;&#10;    for dstloc in dstlocs:&#10;&#10;      # in-xy-plane distance (ignore srcloc[2]/dstdoc[2])&#10;      dist1 = math.sqrt(math.pow((srcloc[0] - dstloc[0] + offsetd0p),2) + math.pow((srcloc[1] - dstloc[1] + offsetd1r),2))&#10;      dist2 = math.sqrt(math.pow((srcloc[0] - dstloc[0] - offsetd0p),2) + math.pow((srcloc[1] - dstloc[1] - offsetd1r),2))&#10;&#10;      gauss1 = math.exp(-0.5*math.pow(dist1/_sigma,2))&#10;      gauss2 = math.exp(-0.5*math.pow(dist2/_sigma,2))&#10;&#10;      if gauss1 &gt; W_cut:&#10;        conn = (i_src,i_dst,0,gauss1)&#10;        out.append(conn)&#10;      elif gauss2 &gt; W_cut:&#10;        conn = (i_src,i_dst,0,gauss2)&#10;        out.append(conn)&#10;&#10;      i_dst = i_dst + 1&#10;    i_src = i_src + 1&#10;  return out&#10;" name="OffsetDualRetGauss" sigma_m="30" E2="2.5" sigma_0="0.3" fovshift="1" nfs="150" W_cut="0.001" offsetd0p="0" offsetd1r="4"/>
                            <Config weightProperty="w"/>
                        </SpineCreator>
                    </LL:Annotation>
                    <BinaryFile file_name="conn_V1_r_edges_to_V2_r_lines_syn0.bin" num_connections="3890892" explicit_delay_flag="0" packed_data="true"/>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </ConnectionList>
                <LL:WeightUpdate name="V1_r_edges to V2_r_lines Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <ValueList>
                            <BinaryFile file_name="explicitDataBinaryFile8.bin" num_elements="3890892"/>
                        </ValueList>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V1_r_edges to V2_r_lines Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pPp_rPr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="4" showlabel="0"/>
                    <start x="0.548103" y="2.06237"/>
                    <curves>
                        <curve>
                            <C1 xpos="0.548103" ypos="4.00787"/>
                            <C2 xpos="-1.87656" ypos="2.7706"/>
                            <end xpos="-1.86779" ypos="5.14422"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <ConnectionList>
                    <LL:Annotation>
                        <SpineCreator>
                            <Script text="#PARNAME=sigma_m        #LOC=1,1&#10;#PARNAME=E2             #LOC=1,2&#10;#PARNAME=sigma_0        #LOC=2,1&#10;#PARNAME=fovshift       #LOC=2,2&#10;#PARNAME=nfs            #LOC=3,1&#10;#PARNAME=W_cut          #LOC=3,2&#10;#PARNAME=offsetd0p      #LOC=4,1&#10;#PARNAME=offsetd1r      #LOC=4,2&#10;#HASWEIGHT&#10;&#10;# Compute a widening Gaussian connection function for a retinotopic&#10;# space, to maintain a constant Gaussian width in Cartesian&#10;# space. This is much like the WideningGaussian connection function,&#10;# but with a configurable neural field size width (W_nfs).&#10;#&#10;# This version incorporates an offset for dstloc[0] and dstloc[1] to&#10;# shift the Gaussian projection by a desired amount.&#10;#&#10;# Considering the r direction, r_d^max, the destination r value for&#10;# max connection strength for a given r_s is given by&#10;#&#10;# r_d^max = r_s + offsetd1r&#10;#&#10;# Thus for positive offsetd1r, &quot;connections are stronger in the&#10;# positive r direction away from the source&quot;.&#10;#&#10;# For positive offsetd0p, &quot;connections are stronger in the&#10;# positive p direction away from the source&quot;.&#10;&#10;def connectionFunc(srclocs,dstlocs,sigma_m,E2,sigma_0,fovshift,nfs,W_cut,offsetd0p,offsetd1r):&#10;&#10;  import math&#10;&#10;  M_f_start=nfs/(E2*math.log((fovshift/(2*E2))+1))&#10;&#10;  i_src = 0&#10;  out = []&#10;  for srcloc in srclocs:&#10;    i_dst = 0&#10;    # Compute the location of srcloc, this defines what sigma will be. As r (as opp. to phi) increases, the sigma should increase.&#10;    M_f =  nfs/(E2*math.log(((1+srcloc[1])/(2*E2))+1))&#10;&#10;    # Set some of M_f to 1 to ensure the fan-out starts at around the edge of the foveal region.&#10;    if (1+srcloc[1]) &lt; fovshift:&#10;      M_f = M_f_start&#10;&#10;    _sigma = (sigma_m/M_f) - (sigma_m/M_f_start) + sigma_0 # as function of r, aka srcloc[1]. M_f is the function of r.&#10;    three_sigma = 3 * _sigma&#10;&#10;    for dstloc in dstlocs:&#10;&#10;      # in-xy-plane distance (ignore srcloc[2]/dstdoc[2])&#10;      xd = (srcloc[0] - dstloc[0] + offsetd0p)&#10;      yd = (srcloc[1] - dstloc[1] + offsetd1r)&#10;      if abs(xd) &lt; three_sigma and abs(yd) &lt; three_sigma:&#10;        dist = math.sqrt(math.pow(xd,2) + math.pow(yd,2))&#10;&#10;        gauss = math.exp(-0.5*math.pow(dist/_sigma,2))&#10;&#10;        if gauss &gt; W_cut:&#10;          conn = (i_src,i_dst,0,gauss)&#10;          out.append(conn)&#10;&#10;      i_dst = i_dst + 1&#10;    i_src = i_src + 1&#10;  return out&#10;" name="OffsetRetGauss" sigma_m="15" E2="2.5" sigma_0="0.3" fovshift="1" nfs="150" W_cut="0.001" offsetd0p="0" offsetd1r="4"/>
                            <Config weightProperty="w"/>
                        </SpineCreator>
                    </LL:Annotation>
                    <BinaryFile file_name="conn_V1_r_edges_to_V2_p_p_r_r_syn0.bin" num_connections="641100" explicit_delay_flag="0" packed_data="true"/>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </ConnectionList>
                <LL:WeightUpdate name="V1_r_edges to V2_pPp_rPr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <ValueList>
                            <BinaryFile file_name="explicitDataBinaryFile9.bin" num_elements="641100"/>
                        </ValueList>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V1_r_edges to V2_pPp_rPr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V1_p_edges">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="0.100069" y="1.46067"/>
                    <curves>
                        <curve>
                            <C1 xpos="-0.598272" ypos="1.31002"/>
                            <C2 xpos="-0.788304" ypos="1.30539"/>
                            <end xpos="-1.52656" ypos="1.53987"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V1_r_edges to V1_p_edges Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V1_r_edges to V1_p_edges Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pPp_rMr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="4" showlabel="0"/>
                    <start x="0.538587" y="2.06237"/>
                    <curves>
                        <curve>
                            <C1 xpos="0.170843" ypos="6.96097"/>
                            <C2 xpos="-1.49104" ypos="6.02476"/>
                            <end xpos="-1.7654" ypos="7.25046"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <ConnectionList>
                    <LL:Annotation>
                        <SpineCreator>
                            <Script text="#PARNAME=sigma_m        #LOC=1,1&#10;#PARNAME=E2             #LOC=1,2&#10;#PARNAME=sigma_0        #LOC=2,1&#10;#PARNAME=fovshift       #LOC=2,2&#10;#PARNAME=nfs            #LOC=3,1&#10;#PARNAME=W_cut          #LOC=3,2&#10;#PARNAME=offsetd0p      #LOC=4,1&#10;#PARNAME=offsetd1r      #LOC=4,2&#10;#HASWEIGHT&#10;&#10;# Compute a widening Gaussian connection function for a retinotopic&#10;# space, to maintain a constant Gaussian width in Cartesian&#10;# space. This is much like the WideningGaussian connection function,&#10;# but with a configurable neural field size width (W_nfs).&#10;#&#10;# This version incorporates an offset for dstloc[0] and dstloc[1] to&#10;# shift the Gaussian projection by a desired amount.&#10;#&#10;# Considering the r direction, r_d^max, the destination r value for&#10;# max connection strength for a given r_s is given by&#10;#&#10;# r_d^max = r_s + offsetd1r&#10;#&#10;# Thus for positive offsetd1r, &quot;connections are stronger in the&#10;# positive r direction away from the source&quot;.&#10;#&#10;# For positive offsetd0p, &quot;connections are stronger in the&#10;# positive p direction away from the source&quot;.&#10;&#10;def connectionFunc(srclocs,dstlocs,sigma_m,E2,sigma_0,fovshift,nfs,W_cut,offsetd0p,offsetd1r):&#10;&#10;  import math&#10;&#10;  M_f_start=nfs/(E2*math.log((fovshift/(2*E2))+1))&#10;&#10;  i_src = 0&#10;  out = []&#10;  for srcloc in srclocs:&#10;    i_dst = 0&#10;    # Compute the location of srcloc, this defines what sigma will be. As r (as opp. to phi) increases, the sigma should increase.&#10;    M_f =  nfs/(E2*math.log(((1+srcloc[1])/(2*E2))+1))&#10;&#10;    # Set some of M_f to 1 to ensure the fan-out starts at around the edge of the foveal region.&#10;    if (1+srcloc[1]) &lt; fovshift:&#10;      M_f = M_f_start&#10;&#10;    _sigma = (sigma_m/M_f) - (sigma_m/M_f_start) + sigma_0 # as function of r, aka srcloc[1]. M_f is the function of r.&#10;    three_sigma = 3 * _sigma&#10;&#10;    for dstloc in dstlocs:&#10;&#10;      # in-xy-plane distance (ignore srcloc[2]/dstdoc[2])&#10;      xd = (srcloc[0] - dstloc[0] + offsetd0p)&#10;      yd = (srcloc[1] - dstloc[1] + offsetd1r)&#10;      if abs(xd) &lt; three_sigma and abs(yd) &lt; three_sigma:&#10;        dist = math.sqrt(math.pow(xd,2) + math.pow(yd,2))&#10;&#10;        gauss = math.exp(-0.5*math.pow(dist/_sigma,2))&#10;&#10;        if gauss &gt; W_cut:&#10;          conn = (i_src,i_dst,0,gauss)&#10;          out.append(conn)&#10;&#10;      i_dst = i_dst + 1&#10;    i_src = i_src + 1&#10;  return out&#10;" name="OffsetRetGauss" sigma_m="15" E2="2.5" sigma_0="0.3" fovshift="1" nfs="150" W_cut="0.001" offsetd0p="0" offsetd1r="-4"/>
                            <Config weightProperty="w"/>
                        </SpineCreator>
                    </LL:Annotation>
                    <BinaryFile file_name="conn_V1_r_edges_to_V2_p_p_r_r_syn0.bin" num_connections="41601" explicit_delay_flag="0" packed_data="true"/>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </ConnectionList>
                <LL:WeightUpdate name="V1_r_edges to V2_pPp_rMr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <ValueList>
                            <BinaryFile file_name="explicitDataBinaryFile4.bin" num_elements="41601"/>
                        </ValueList>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V1_r_edges to V2_pPp_rMr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pMp_rMr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="4" showlabel="0"/>
                    <start x="0.535335" y="2.06237"/>
                    <curves>
                        <curve>
                            <C1 xpos="0.574324" ypos="5.72301"/>
                            <C2 xpos="-0.0279321" ypos="4.85782"/>
                            <end xpos="1.79036" ypos="7.14492"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <ConnectionList>
                    <LL:Annotation>
                        <SpineCreator>
                            <Script text="#PARNAME=sigma_m        #LOC=1,1&#10;#PARNAME=E2             #LOC=1,2&#10;#PARNAME=sigma_0        #LOC=2,1&#10;#PARNAME=fovshift       #LOC=2,2&#10;#PARNAME=nfs            #LOC=3,1&#10;#PARNAME=W_cut          #LOC=3,2&#10;#PARNAME=offsetd0p      #LOC=4,1&#10;#PARNAME=offsetd1r      #LOC=4,2&#10;#HASWEIGHT&#10;&#10;# Compute a widening Gaussian connection function for a retinotopic&#10;# space, to maintain a constant Gaussian width in Cartesian&#10;# space. This is much like the WideningGaussian connection function,&#10;# but with a configurable neural field size width (W_nfs).&#10;#&#10;# This version incorporates an offset for dstloc[0] and dstloc[1] to&#10;# shift the Gaussian projection by a desired amount.&#10;#&#10;# Considering the r direction, r_d^max, the destination r value for&#10;# max connection strength for a given r_s is given by&#10;#&#10;# r_d^max = r_s + offsetd1r&#10;#&#10;# Thus for positive offsetd1r, &quot;connections are stronger in the&#10;# positive r direction away from the source&quot;.&#10;#&#10;# For positive offsetd0p, &quot;connections are stronger in the&#10;# positive p direction away from the source&quot;.&#10;&#10;def connectionFunc(srclocs,dstlocs,sigma_m,E2,sigma_0,fovshift,nfs,W_cut,offsetd0p,offsetd1r):&#10;&#10;  import math&#10;&#10;  M_f_start=nfs/(E2*math.log((fovshift/(2*E2))+1))&#10;&#10;  i_src = 0&#10;  out = []&#10;  for srcloc in srclocs:&#10;    i_dst = 0&#10;    # Compute the location of srcloc, this defines what sigma will be. As r (as opp. to phi) increases, the sigma should increase.&#10;    M_f =  nfs/(E2*math.log(((1+srcloc[1])/(2*E2))+1))&#10;&#10;    # Set some of M_f to 1 to ensure the fan-out starts at around the edge of the foveal region.&#10;    if (1+srcloc[1]) &lt; fovshift:&#10;      M_f = M_f_start&#10;&#10;    _sigma = (sigma_m/M_f) - (sigma_m/M_f_start) + sigma_0 # as function of r, aka srcloc[1]. M_f is the function of r.&#10;    three_sigma = 3 * _sigma&#10;&#10;    for dstloc in dstlocs:&#10;&#10;      # in-xy-plane distance (ignore srcloc[2]/dstdoc[2])&#10;      xd = (srcloc[0] - dstloc[0] + offsetd0p)&#10;      yd = (srcloc[1] - dstloc[1] + offsetd1r)&#10;      if abs(xd) &lt; three_sigma and abs(yd) &lt; three_sigma:&#10;        dist = math.sqrt(math.pow(xd,2) + math.pow(yd,2))&#10;&#10;        gauss = math.exp(-0.5*math.pow(dist/_sigma,2))&#10;&#10;        if gauss &gt; W_cut:&#10;          conn = (i_src,i_dst,0,gauss)&#10;          out.append(conn)&#10;&#10;      i_dst = i_dst + 1&#10;    i_src = i_src + 1&#10;  return out&#10;" name="OffsetRetGauss" sigma_m="15" E2="2.5" sigma_0="0.3" fovshift="1" nfs="150" W_cut="0.001" offsetd0p="0" offsetd1r="-4"/>
                            <Config weightProperty="w"/>
                        </SpineCreator>
                    </LL:Annotation>
                    <BinaryFile file_name="conn__to__syn0.bin" num_connections="41601" explicit_delay_flag="0" packed_data="true"/>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </ConnectionList>
                <LL:WeightUpdate name="V1_r_edges to V2_pMp_rMr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <ValueList>
                            <BinaryFile file_name="explicitDataBinaryFile12.bin" num_elements="41601"/>
                        </ValueList>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V1_r_edges to V2_pMp_rMr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pMp_rPr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="4" showlabel="0"/>
                    <start x="0.519121" y="2.06237"/>
                    <curves>
                        <curve>
                            <C1 xpos="0.688519" ypos="4.31097"/>
                            <C2 xpos="1.76973" ypos="3.66235"/>
                            <end xpos="1.76973" ypos="5.05419"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <ConnectionList>
                    <LL:Annotation>
                        <SpineCreator>
                            <Script text="#PARNAME=sigma_m        #LOC=1,1&#10;#PARNAME=E2             #LOC=1,2&#10;#PARNAME=sigma_0        #LOC=2,1&#10;#PARNAME=fovshift       #LOC=2,2&#10;#PARNAME=nfs            #LOC=3,1&#10;#PARNAME=W_cut          #LOC=3,2&#10;#PARNAME=offsetd0p      #LOC=4,1&#10;#PARNAME=offsetd1r      #LOC=4,2&#10;#HASWEIGHT&#10;&#10;# Compute a widening Gaussian connection function for a retinotopic&#10;# space, to maintain a constant Gaussian width in Cartesian&#10;# space. This is much like the WideningGaussian connection function,&#10;# but with a configurable neural field size width (W_nfs).&#10;#&#10;# This version incorporates an offset for dstloc[0] and dstloc[1] to&#10;# shift the Gaussian projection by a desired amount.&#10;#&#10;# Considering the r direction, r_d^max, the destination r value for&#10;# max connection strength for a given r_s is given by&#10;#&#10;# r_d^max = r_s + offsetd1r&#10;#&#10;# Thus for positive offsetd1r, &quot;connections are stronger in the&#10;# positive r direction away from the source&quot;.&#10;#&#10;# For positive offsetd0p, &quot;connections are stronger in the&#10;# positive p direction away from the source&quot;.&#10;&#10;def connectionFunc(srclocs,dstlocs,sigma_m,E2,sigma_0,fovshift,nfs,W_cut,offsetd0p,offsetd1r):&#10;&#10;  import math&#10;&#10;  M_f_start=nfs/(E2*math.log((fovshift/(2*E2))+1))&#10;&#10;  i_src = 0&#10;  out = []&#10;  for srcloc in srclocs:&#10;    i_dst = 0&#10;    # Compute the location of srcloc, this defines what sigma will be. As r (as opp. to phi) increases, the sigma should increase.&#10;    M_f =  nfs/(E2*math.log(((1+srcloc[1])/(2*E2))+1))&#10;&#10;    # Set some of M_f to 1 to ensure the fan-out starts at around the edge of the foveal region.&#10;    if (1+srcloc[1]) &lt; fovshift:&#10;      M_f = M_f_start&#10;&#10;    _sigma = (sigma_m/M_f) - (sigma_m/M_f_start) + sigma_0 # as function of r, aka srcloc[1]. M_f is the function of r.&#10;    three_sigma = 3 * _sigma&#10;&#10;    for dstloc in dstlocs:&#10;&#10;      # in-xy-plane distance (ignore srcloc[2]/dstdoc[2])&#10;      xd = (srcloc[0] - dstloc[0] + offsetd0p)&#10;      yd = (srcloc[1] - dstloc[1] + offsetd1r)&#10;      if abs(xd) &lt; three_sigma and abs(yd) &lt; three_sigma:&#10;        dist = math.sqrt(math.pow(xd,2) + math.pow(yd,2))&#10;&#10;        gauss = math.exp(-0.5*math.pow(dist/_sigma,2))&#10;&#10;        if gauss &gt; W_cut:&#10;          conn = (i_src,i_dst,0,gauss)&#10;          out.append(conn)&#10;&#10;      i_dst = i_dst + 1&#10;    i_src = i_src + 1&#10;  return out&#10;" name="OffsetRetGauss" sigma_m="15" E2="2.5" sigma_0="0.3" fovshift="1" nfs="150" W_cut="0.001" offsetd0p="0" offsetd1r="4"/>
                            <Config weightProperty="w"/>
                        </SpineCreator>
                    </LL:Annotation>
                    <BinaryFile file_name="conn_V1_r_edges_to_V2_pMp_rPr_syn0.bin" num_connections="41796" explicit_delay_flag="0" packed_data="true"/>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </ConnectionList>
                <LL:WeightUpdate name="V1_r_edges to V2_pMp_rPr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <ValueList>
                            <BinaryFile file_name="explicitDataBinaryFile13.bin" num_elements="41796"/>
                        </ValueList>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V1_r_edges to V2_pMp_rPr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
    </LL:Population>
    <LL:Population>
        <LL:Annotation>
            <SpineCreator>
                <xPos value="-6.16069"/>
                <yPos value="6.62624"/>
                <animSpeed value="0.2"/>
                <aspectRatio value="1.66667"/>
                <colour red="0" green="170" blue="255"/>
                <size value="1"/>
                <tag value="3"/>
                <x3D value="0"/>
                <y3D value="0"/>
                <z3D value="0"/>
                <is_visualised value="0"/>
            </SpineCreator>
        </LL:Annotation>
        <LL:Neuron name="V2_p_lines" size="22500" url="LINtanh.xml">
            <Property name="tau" dimension="?">
                <FixedValue value="10"/>
            </Property>
            <Property name="noise" dimension="?">
                <FixedValue value="0.01"/>
            </Property>
            <Property name="a" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="y" dimension="?">
                <FixedValue value="0"/>
            </Property>
        </LL:Neuron>
        <Layout url="grid.xml" seed="123" minimum_distance="0">
            <Property name="numNeurons" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="rowlen" dimension="?">
                <FixedValue value="150"/>
            </Property>
            <Property name="x" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="y" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="z" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="t" dimension="?">
                <FixedValue value="0"/>
            </Property>
        </Layout>
        <LL:Projection dst_population="V2_pPp_rPr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="-5.32735" y="6.3801"/>
                    <curves>
                        <curve>
                            <C1 xpos="-4.40788" ypos="6.10854"/>
                            <C2 xpos="-4.69056" ypos="5.46462"/>
                            <end xpos="-3.09303" ypos="5.57631"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_p_lines to V2_pPp_rPr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_p_lines to V2_pPp_rPr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_r_lines">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="-6.15078" y="7.12623"/>
                    <curves>
                        <curve>
                            <C1 xpos="-6.02712" ypos="10.4869"/>
                            <C2 xpos="5.44692" ypos="10.5177"/>
                            <end xpos="5.69438" ypos="7.18322"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_p_lines to V2_r_lines Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_p_lines to V2_r_lines Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pPp_rMr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="-5.32693" y="6.99997"/>
                    <curves>
                        <curve>
                            <C1 xpos="-4.15809" ypos="6.99997"/>
                            <C2 xpos="-4.16864" ypos="7.69685"/>
                            <end xpos="-3.10416" ypos="7.72699"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_p_lines to V2_pPp_rMr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_p_lines to V2_pPp_rMr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pMp_rMr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="-5.70236" y="7.12623"/>
                    <curves>
                        <curve>
                            <C1 xpos="-3.81812" ypos="8.8133"/>
                            <C2 xpos="-0.865372" ypos="9.84036"/>
                            <end xpos="1.69323" ypos="8.14492"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_p_lines to V2_pMp_rMr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_p_lines to V2_pMp_rMr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pMp_rPr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="-5.32735" y="6.68332"/>
                    <curves>
                        <curve>
                            <C1 xpos="-1.57961" ypos="6.94006"/>
                            <C2 xpos="-1.35589" ypos="6.75753"/>
                            <end xpos="1.05323" ypos="5.86346"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_p_lines to V2_pMp_rPr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_p_lines to V2_pMp_rPr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
    </LL:Population>
    <LL:Population>
        <LL:Annotation>
            <SpineCreator>
                <xPos value="5.52935"/>
                <yPos value="6.68322"/>
                <animSpeed value="0.2"/>
                <aspectRatio value="1.66667"/>
                <colour red="0" green="170" blue="255"/>
                <size value="1"/>
                <tag value="4"/>
                <x3D value="0"/>
                <y3D value="0"/>
                <z3D value="0"/>
                <is_visualised value="0"/>
            </SpineCreator>
        </LL:Annotation>
        <LL:Neuron name="V2_r_lines" size="22500" url="LINtanh.xml">
            <Property name="tau" dimension="?">
                <FixedValue value="10"/>
            </Property>
            <Property name="noise" dimension="?">
                <FixedValue value="0.01"/>
            </Property>
            <Property name="a" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="y" dimension="?">
                <FixedValue value="0"/>
            </Property>
        </LL:Neuron>
        <Layout url="grid.xml" seed="123" minimum_distance="0">
            <Property name="numNeurons" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="rowlen" dimension="?">
                <FixedValue value="150"/>
            </Property>
            <Property name="x" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="y" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="z" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="t" dimension="?">
                <FixedValue value="0"/>
            </Property>
        </Layout>
        <LL:Projection dst_population="V2_pPp_rPr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="4.69601" y="6.60313"/>
                    <curves>
                        <curve>
                            <C1 xpos="-0.252264" ypos="6.66589"/>
                            <C2 xpos="0.66474" ypos="6.12486"/>
                            <end xpos="-1.42637" ypos="5.69331"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_r_lines to V2_pPp_rPr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_r_lines to V2_pPp_rPr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_p_lines">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="5.47551" y="7.18322"/>
                    <curves>
                        <curve>
                            <C1 xpos="5.11108" ypos="10.5674"/>
                            <C2 xpos="-5.82664" ypos="9.77746"/>
                            <end xpos="-5.88892" ypos="7.12623"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_r_lines to V2_p_lines Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_r_lines to V2_p_lines Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pPp_rMr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="5.12856" y="7.18322"/>
                    <curves>
                        <curve>
                            <C1 xpos="2.65248" ypos="9.44589"/>
                            <C2 xpos="0.69926" ypos="9.1983"/>
                            <end xpos="-1.43765" ypos="8.13224"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_r_lines to V2_pPp_rMr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_r_lines to V2_pPp_rMr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pMp_rMr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="4.84582" y="7.18322"/>
                    <curves>
                        <curve>
                            <C1 xpos="3.93844" ypos="7.858"/>
                            <C2 xpos="3.32405" ypos="7.64709"/>
                            <end xpos="2.70073" ypos="7.59701"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_r_lines to V2_pMp_rMr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_r_lines to V2_pMp_rMr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pMp_rPr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="4.69601" y="6.32899"/>
                    <curves>
                        <curve>
                            <C1 xpos="3.57204" ypos="5.85123"/>
                            <C2 xpos="3.43745" ypos="5.57502"/>
                            <end xpos="2.71989" ypos="5.56538"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_r_lines to V2_pMp_rPr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_r_lines to V2_pMp_rPr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
    </LL:Population>
    <LL:Population>
        <LL:Annotation>
            <SpineCreator>
                <xPos value="-2.2597"/>
                <yPos value="5.64418"/>
                <animSpeed value="0.2"/>
                <aspectRatio value="1.66667"/>
                <colour red="0" green="170" blue="255"/>
                <size value="1"/>
                <tag value="6"/>
                <x3D value="0"/>
                <y3D value="0"/>
                <z3D value="0"/>
                <is_visualised value="1"/>
            </SpineCreator>
        </LL:Annotation>
        <LL:Neuron name="V2_pPp_rPr" size="22500" url="LINtanh.xml">
            <Property name="tau" dimension="?">
                <FixedValue value="10"/>
            </Property>
            <Property name="noise" dimension="?">
                <FixedValue value="0.01"/>
            </Property>
            <Property name="a" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="y" dimension="?">
                <FixedValue value="0"/>
            </Property>
        </LL:Neuron>
        <Layout url="grid.xml" seed="123" minimum_distance="0">
            <Property name="numNeurons" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="rowlen" dimension="?">
                <FixedValue value="150"/>
            </Property>
            <Property name="x" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="y" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="z" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="t" dimension="?">
                <FixedValue value="0"/>
            </Property>
        </Layout>
        <LL:Projection dst_population="V2_p_lines">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="-3.09303" y="5.43308"/>
                    <curves>
                        <curve>
                            <C1 xpos="-3.93465" ypos="5.21988"/>
                            <C2 xpos="-4.20454" ypos="5.54714"/>
                            <end xpos="-5.32735" ypos="6.27329"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pPp_rPr to V2_p_lines Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pPp_rPr to V2_p_lines Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_r_lines">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="-1.42637" y="5.82741"/>
                    <curves>
                        <curve>
                            <C1 xpos="-0.0123252" ypos="6.08876"/>
                            <C2 xpos="-0.100511" ypos="6.77502"/>
                            <end xpos="4.69543" ypos="6.7136"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pPp_rPr to V2_r_lines Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pPp_rPr to V2_r_lines Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pPp_rMr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="-2.77853" y="6.14418"/>
                    <curves>
                        <curve>
                            <C1 xpos="-2.7752" ypos="6.76278"/>
                            <C2 xpos="-2.93906" ypos="6.69528"/>
                            <end xpos="-2.90464" ypos="7.25067"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pPp_rPr to V2_pPp_rMr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pPp_rPr to V2_pPp_rMr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pMp_rMr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="-1.868" y="6.14418"/>
                    <curves>
                        <curve>
                            <C1 xpos="-1.26098" ypos="6.91903"/>
                            <C2 xpos="-0.0075433" ypos="7.25842"/>
                            <end xpos="1.03405" ypos="7.47313"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pPp_rPr to V2_pMp_rMr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pPp_rPr to V2_pMp_rMr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pMp_rPr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="-1.42637" y="5.3853"/>
                    <curves>
                        <curve>
                            <C1 xpos="0.133683" ypos="4.90067"/>
                            <C2 xpos="0.304408" ypos="5.12014"/>
                            <end xpos="1.05323" ypos="5.32557"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pPp_rPr to V2_pMp_rPr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pPp_rPr to V2_pMp_rPr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
    </LL:Population>
    <LL:Population>
        <LL:Annotation>
            <SpineCreator>
                <xPos value="-2.27099"/>
                <yPos value="7.75092"/>
                <animSpeed value="0.2"/>
                <aspectRatio value="1.66667"/>
                <colour red="0" green="170" blue="255"/>
                <size value="1"/>
                <tag value="2"/>
                <x3D value="0"/>
                <y3D value="0"/>
                <z3D value="0"/>
                <is_visualised value="0"/>
            </SpineCreator>
        </LL:Annotation>
        <LL:Neuron name="V2_pPp_rMr" size="22500" url="LINtanh.xml">
            <Property name="tau" dimension="?">
                <FixedValue value="10"/>
            </Property>
            <Property name="noise" dimension="?">
                <FixedValue value="0.01"/>
            </Property>
            <Property name="a" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="y" dimension="?">
                <FixedValue value="0"/>
            </Property>
        </LL:Neuron>
        <Layout url="none.xml" seed="123" minimum_distance="0"/>
        <LL:Projection dst_population="V2_p_lines">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="-3.10414" y="7.50843"/>
                    <curves>
                        <curve>
                            <C1 xpos="-4.26574" ypos="7.50843"/>
                            <C2 xpos="-4.26554" ypos="6.86725"/>
                            <end xpos="-5.32696" ypos="6.86725"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pPp_rMr to V2_p_lines Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pPp_rMr to V2_p_lines Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pPp_rPr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="-2.67293" y="7.25069"/>
                    <curves>
                        <curve>
                            <C1 xpos="-2.74146" ypos="6.39257"/>
                            <C2 xpos="-2.59861" ypos="6.95619"/>
                            <end xpos="-2.6145" ypos="6.14418"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pPp_rMr to V2_pPp_rPr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pPp_rMr to V2_pPp_rPr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_r_lines">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="-1.50885" y="8.25092"/>
                    <curves>
                        <curve>
                            <C1 xpos="-0.144109" ypos="9.14626"/>
                            <C2 xpos="2.4941" ypos="9.84978"/>
                            <end xpos="5.28108" ypos="7.18322"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pPp_rMr to V2_r_lines Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pPp_rMr to V2_r_lines Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pMp_rMr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="-1.43765" y="7.98291"/>
                    <curves>
                        <curve>
                            <C1 xpos="0.0982825" ypos="8.15303"/>
                            <C2 xpos="-0.410834" ypos="7.95504"/>
                            <end xpos="1.03405" ypos="7.89425"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pPp_rMr to V2_pMp_rMr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pPp_rMr to V2_pMp_rMr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pMp_rPr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="-1.43765" y="7.48016"/>
                    <curves>
                        <curve>
                            <C1 xpos="0.22654" ypos="6.93943"/>
                            <C2 xpos="0.314118" ypos="6.58484"/>
                            <end xpos="1.21399" ypos="6.05419"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pPp_rMr to V2_pMp_rPr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pPp_rMr to V2_pMp_rPr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
    </LL:Population>
    <LL:Population>
        <LL:Annotation>
            <SpineCreator>
                <xPos value="1.88656"/>
                <yPos value="5.55419"/>
                <animSpeed value="0.2"/>
                <aspectRatio value="1.66667"/>
                <colour red="0" green="170" blue="255"/>
                <size value="1"/>
                <tag value="3"/>
                <x3D value="0"/>
                <y3D value="0"/>
                <z3D value="0"/>
                <is_visualised value="0"/>
            </SpineCreator>
        </LL:Annotation>
        <LL:Neuron name="V2_pMp_rPr" size="22500" url="LINtanh.xml">
            <Property name="tau" dimension="?">
                <FixedValue value="10"/>
            </Property>
            <Property name="noise" dimension="?">
                <FixedValue value="0.01"/>
            </Property>
            <Property name="a" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="y" dimension="?">
                <FixedValue value="0"/>
            </Property>
        </LL:Neuron>
        <Layout url="none.xml" seed="123" minimum_distance="0"/>
        <LL:Projection dst_population="V2_pMp_rMr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="2.4002" y="6.05419"/>
                    <curves>
                        <curve>
                            <C1 xpos="2.5973" ypos="6.77886"/>
                            <C2 xpos="2.35193" ypos="6.48988"/>
                            <end xpos="2.42263" ypos="7.14492"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pMp_rPr to V2_pMp_rMr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pMp_rPr to V2_pMp_rMr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pPp_rMr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="1.36841" y="6.05419"/>
                    <curves>
                        <curve>
                            <C1 xpos="0.613102" ypos="6.78305"/>
                            <C2 xpos="-0.646231" ypos="7.41938"/>
                            <end xpos="-1.43765" ypos="7.58088"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pMp_rPr to V2_pPp_rMr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pMp_rPr to V2_pPp_rMr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pPp_rPr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="1.05323" y="5.17306"/>
                    <curves>
                        <curve>
                            <C1 xpos="0.092472" ypos="4.86637"/>
                            <C2 xpos="-0.605472" ypos="4.93784"/>
                            <end xpos="-1.42637" ypos="5.27913"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pMp_rPr to V2_pPp_rPr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pMp_rPr to V2_pPp_rPr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_r_lines">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="2.71989" y="5.74122"/>
                    <curves>
                        <curve>
                            <C1 xpos="4.04443" ypos="5.74122"/>
                            <C2 xpos="4.04443" ypos="6.40381"/>
                            <end xpos="4.69601" ypos="6.40381"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pMp_rPr to V2_r_lines Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pMp_rPr to V2_r_lines Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_p_lines">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="1.05323" y="5.70149"/>
                    <curves>
                        <curve>
                            <C1 xpos="-2.43473" ypos="7.08772"/>
                            <C2 xpos="-2.50808" ypos="6.64754"/>
                            <end xpos="-5.32735" ypos="6.5194"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pMp_rPr to V2_p_lines Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pMp_rPr to V2_p_lines Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
    </LL:Population>
    <LL:Population>
        <LL:Annotation>
            <SpineCreator>
                <xPos value="1.86739"/>
                <yPos value="7.64492"/>
                <animSpeed value="0.2"/>
                <aspectRatio value="1.66667"/>
                <colour red="0" green="170" blue="255"/>
                <size value="1"/>
                <tag value="4"/>
                <x3D value="0"/>
                <y3D value="0"/>
                <z3D value="0"/>
                <is_visualised value="0"/>
            </SpineCreator>
        </LL:Annotation>
        <LL:Neuron name="V2_pMp_rMr" size="22500" url="LINtanh.xml">
            <Property name="tau" dimension="?">
                <FixedValue value="10"/>
            </Property>
            <Property name="noise" dimension="?">
                <FixedValue value="0.01"/>
            </Property>
            <Property name="a" dimension="?">
                <FixedValue value="0"/>
            </Property>
            <Property name="y" dimension="?">
                <FixedValue value="0"/>
            </Property>
        </LL:Neuron>
        <Layout url="none.xml" seed="123" minimum_distance="0"/>
        <LL:Projection dst_population="V2_r_lines">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="2.70073" y="7.73779"/>
                    <curves>
                        <curve>
                            <C1 xpos="3.75929" ypos="7.85577"/>
                            <C2 xpos="4.2081" ypos="7.87636"/>
                            <end xpos="4.97566" ypos="7.18322"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pMp_rMr to V2_r_lines Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pMp_rMr to V2_r_lines Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pMp_rPr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="2.25565" y="7.14492"/>
                    <curves>
                        <curve>
                            <C1 xpos="2.19381" ypos="6.32085"/>
                            <C2 xpos="2.46098" ypos="6.83339"/>
                            <end xpos="2.25271" ypos="6.05419"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pMp_rMr to V2_pMp_rPr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pMp_rMr to V2_pMp_rPr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pPp_rPr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="1.03405" y="7.38524"/>
                    <curves>
                        <curve>
                            <C1 xpos="-0.33434" ypos="6.95882"/>
                            <C2 xpos="-0.884755" ypos="6.9706"/>
                            <end xpos="-1.74141" ypos="6.14418"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pMp_rMr to V2_pPp_rPr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pMp_rMr to V2_pPp_rPr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_pPp_rMr">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="1.03405" y="7.73824"/>
                    <curves>
                        <curve>
                            <C1 xpos="-0.262342" ypos="7.76412"/>
                            <C2 xpos="0.041714" ypos="7.98333"/>
                            <end xpos="-1.43765" ypos="7.88032"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pMp_rMr to V2_pPp_rMr Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pMp_rMr to V2_pPp_rMr Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
        <LL:Projection dst_population="V2_p_lines">
            <LL:Annotation>
                <SpineCreator>
                    <DrawOptions style="0" showlabel="0"/>
                    <start x="1.46221" y="8.14492"/>
                    <curves>
                        <curve>
                            <C1 xpos="-0.581101" ypos="9.27182"/>
                            <C2 xpos="-3.32692" ypos="8.76576"/>
                            <end xpos="-5.49844" ypos="7.12623"/>
                        </curve>
                    </curves>
                </SpineCreator>
            </LL:Annotation>
            <LL:Synapse>
                <OneToOneConnection>
                    <Delay dimension="ms">
                        <FixedValue value="1"/>
                    </Delay>
                </OneToOneConnection>
                <LL:WeightUpdate name="V2_pMp_rMr to V2_p_lines Synapse 0 weight_update" url="Weight.xml" input_src_port="y" input_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="-0.6"/>
                    </Property>
                </LL:WeightUpdate>
                <LL:PostSynapse name="V2_pMp_rMr to V2_p_lines Synapse 0 postsynapse" url="passthrough.xml" input_src_port="out" input_dst_port="in" output_src_port="out" output_dst_port="in">
                    <Property name="w" dimension="?">
                        <FixedValue value="1"/>
                    </Property>
                </LL:PostSynapse>
            </LL:Synapse>
        </LL:Projection>
    </LL:Population>
</LL:SpineML>
